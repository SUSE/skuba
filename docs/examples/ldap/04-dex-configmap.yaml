kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
data:
  config.yaml: |
    issuer: https://gangwaydexdemo.com:9556/dex
    storage:
      type: sqlite3
      config:
        file: examples/dex.db
    web:
      https: 0.0.0.0:9556
      tlsCert: /etc/dex/tls/dex.crt
      tlsKey:  /etc/dex/tls/dex.key

    connectors:
    - type: mockCallback
      id: mock
      name: Example
    - type: ldap
      name: OpenLDAP
      id: ldap
      config:
        host: gangwaydexdemo.com:636
        # startTLS: true

        # No TLS for this setup.
        # insecureNoSSL: true

        # This would normally be a read-only user.
        bindDN: cn=admin,dc=gangwaydexdemo,dc=com
        bindPW: admin

        usernamePrompt: Email Address
        rootCA: /etc/pki/ca.crt

        userSearch:
          baseDN: dc=gangwaydexdemo,dc=com
          filter: "(objectClass=inetOrgPerson)"
          username: mail
          # "DN" (case sensitive) is a special attribute name. It indicates that
          # this value should be taken from the entity's DN not an attribute on
          # the entity.
          idAttr: DN
          emailAttr: mail
          nameAttr: cn

        groupSearch:
          baseDN: ou=Groups,dc=gangwaydexdemo,dc=com
          filter: "(objectClass=groupOfNames)"

          # A user is a member of a group when their DN matches
          # the value of a "member" attribute on the group entity.
          userAttr: DN
          groupAttr: member

          # The group name should be the "cn" value.
          nameAttr: cn

    staticClients:
    - id: example-app
      redirectURIs:
      - 'http://gangwaydexdemo.com/callback'
      name: 'Example App'
      secret: ZXhhbXBsZS1hcHAtc2VjcmV0


    # Let dex keep a list of passwords which can be used to login to dex.
    enablePasswordDB: true

    # A static list of passwords to login the end user. By identifying here, dex
    # won't look in its underlying storage for passwords.
    #
    # If this option isn't chosen users may be added through the gRPC API.

    staticPasswords:
    - email: "admin@example.com"
      # bcrypt hash of the string "password"
      hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
